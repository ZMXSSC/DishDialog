import {model, Schema, InferSchemaType} from "mongoose";

const recipeSchema = new Schema({
    //Each of the recipe need to have a user id that ties to the owner
    userId: {type: Schema.Types.ObjectId, required: true},
    //username
    author: {type: String, required: true},
    //Each of the recipe need to have title, content and timestamp
    title: {type: String, required: true},
    text: {type: String},
    //Each of the recipe need to have image(s), the type is string and it's generated by multer-gridfs-storage
    imageName: {type: String},
    imageDesc: {type: String},
    isPublic: {type: Boolean, default: true},
    //Timestamp can be done by mongoose, so we don't need to define it here
    //We can do it here:
}, {timestamps: true});

//Adding text index to title and text
//this will allow us to search for recipes by title and text
//https://docs.mongodb.com/manual/text-search/
recipeSchema.index({ title: 'text', text: 'text' });

//Create a type for typescript
type Recipe = InferSchemaType<typeof recipeSchema>;

//export the model for external use
//                         create "Recipe" collection in MongoDB
export default model<Recipe>("Recipe", recipeSchema);
